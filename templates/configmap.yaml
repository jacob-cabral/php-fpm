kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "php-fpm.fullname" . }}-php-pool
  labels:
    {{- include "php-fpm.labels" . | nindent 4 }}
data:
  {{- if .Values.pool.extraConfFiles }}
  {{ (.Files.Glob .Values.pool.extraConfFiles).AsConfig | nindent 2 }}
  {{- end }}
  {{ (.Files.Glob "files/php-fpm.d/*").AsConfig | nindent 2 }}
  www.conf: |-
    ; Start a new pool named 'www'.
    ; the variable $pool can be used in any directive and will be replaced by the
    ; pool name ('www' here)
    [www]

    ; Per pool prefix
    ; It only applies on the following directives:
    ; - 'access.log'
    ; - 'slowlog'
    ; - 'listen' (unixsocket)
    ; - 'chroot'
    ; - 'chdir'
    ; - 'php_values'
    ; - 'php_admin_values'
    ; When not set, the global prefix (or NONE) applies instead.
    ; Note: This directive can also be relative to the global prefix.
    ; Default Value: none
    {{- include "php-fpm.pool.prefix" . | nindent 4 }}

    ; Unix user/group of the child processes. This can be used only if the master
    ; process running user is root. It is set after the child process is created.
    ; The user and group can be specified either by their name or by their numeric
    ; IDs.
    ; Note: If the user is root, the executable needs to be started with
    ;       --allow-to-run-as-root option to work.
    ; Default Values: The user is set to master process running user by default.
    ;                 If the group is not set, the user's group is used.
    user = {{ default "www-data" .Values.pool.user }}
    group = {{ default "www-data" .Values.pool.group }}

    ; The address on which to accept FastCGI requests.
    ; Valid syntaxes are:
    ;   'ip.add.re.ss:port'    - to listen on a TCP socket to a specific IPv4 address on
    ;                            a specific port;
    ;   '[ip:6:addr:ess]:port' - to listen on a TCP socket to a specific IPv6 address on
    ;                            a specific port;
    ;   'port'                 - to listen on a TCP socket to all addresses
    ;                            (IPv6 and IPv4-mapped) on a specific port;
    ;   '/path/to/unix/socket' - to listen on a unix socket.
    ; Note: This value is mandatory.
    listen = {{ .Values.service.port }}

    ; Set the following PHP's pool directives from the Helm Chart's helper.
    {{- include "php-fpm.pool.listen.backlog" . | nindent 4 }}

    {{- include "php-fpm.pool.listen.owner" . | nindent 4 }}
    {{- include "php-fpm.pool.listen.group" . | nindent 4 }}
    {{- include "php-fpm.pool.listen.mode" . | nindent 4 }}
    {{- include "php-fpm.pool.listen.acl_users" . | nindent 4 }}
    {{- include "php-fpm.pool.listen.acl_groups" . | nindent 4 }}
    {{- include "php-fpm.pool.listen.allowed_clients" . | nindent 4 }}

    {{- include "php-fpm.pool.process.priority" . | nindent 4 }}
    {{- include "php-fpm.pool.process.dumpable" . | nindent 4 }}

    ; Choose how the process manager will control the number of child processes.
    ; Possible Values:
    ;   static  - a fixed number (pm.max_children) of child processes;
    ;   dynamic - the number of child processes are set dynamically based on the
    ;             following directives. With this process management, there will be
    ;             always at least 1 children.
    ;             pm.max_children      - the maximum number of children that can
    ;                                    be alive at the same time.
    ;             pm.start_servers     - the number of children created on startup.
    ;             pm.min_spare_servers - the minimum number of children in 'idle'
    ;                                    state (waiting to process). If the number
    ;                                    of 'idle' processes is less than this
    ;                                    number then some children will be created.
    ;             pm.max_spare_servers - the maximum number of children in 'idle'
    ;                                    state (waiting to process). If the number
    ;                                    of 'idle' processes is greater than this
    ;                                    number then some children will be killed.
    ;             pm.max_spawn_rate    - the maximum number of rate to spawn child
    ;                                    processes at once.
    ;  ondemand - no children are created at startup. Children will be forked when
    ;             new requests will connect. The following parameter are used:
    ;             pm.max_children           - the maximum number of children that
    ;                                         can be alive at the same time.
    ;             pm.process_idle_timeout   - The number of seconds after which
    ;                                         an idle process will be killed.
    ; Note: This value is mandatory.
    pm = {{ default "dynamic" .Values.pool.pm.mode }}

    ; The number of child processes to be created when pm is set to 'static' and the
    ; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
    ; This value sets the limit on the number of simultaneous requests that will be
    ; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
    ; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP
    ; CGI. The below defaults are based on a server without much resources. Don't
    ; forget to tweak pm.* to fit your needs.
    ; Note: Used when pm is set to 'static', 'dynamic' or 'ondemand'
    ; Note: This value is mandatory.
    pm.max_children = {{ default 5 .Values.pool.pm.max_children }}

    ; The number of child processes created on startup.
    ; Note: Used only when pm is set to 'dynamic'
    ; Default Value: (min_spare_servers + max_spare_servers) / 2
    pm.start_servers = {{ default 2 .Values.pool.pm.start_servers }}

    ; The desired minimum number of idle server processes.
    ; Note: Used only when pm is set to 'dynamic'
    ; Note: Mandatory when pm is set to 'dynamic'
    pm.min_spare_servers = {{ default 1 .Values.pool.pm.min_spare_servers }}

    ; The desired maximum number of idle server processes.
    ; Note: Used only when pm is set to 'dynamic'
    ; Note: Mandatory when pm is set to 'dynamic'
    pm.max_spare_servers = {{ default 3 .Values.pool.pm.max_spare_servers }}

    ; Set the following PHP pool directives from the Helm Chart helper.
    {{- include "php-fpm.pool.pm.process_idle_timeout" . | nindent 4 }}
    {{- include "php-fpm.pool.pm.max_requests" . | nindent 4 }}
    {{- include "php-fpm.pool.pm.status_path" . | nindent 4 }}

    {{- include "php-fpm.pool.ping.path" . | nindent 4 }}
    {{- include "php-fpm.pool.ping.response" . | nindent 4 }}

    ; The access log file
    ; Default: not set
    access.log = {{ default "/dev/stdout" .Values.pool.access.log }}

    ; The access log format.
    ; The following syntax is allowed
    ;  %%: the '%' character
    ;  %C: %CPU used by the request
    ;      it can accept the following format:
    ;      - %{user}C for user CPU only
    ;      - %{system}C for system CPU only
    ;      - %{total}C  for user + system CPU (default)
    ;  %d: time taken to serve the request
    ;      it can accept the following format:
    ;      - %{seconds}d (default)
    ;      - %{milliseconds}d
    ;      - %{milli}d
    ;      - %{microseconds}d
    ;      - %{micro}d
    ;  %e: an environment variable (same as $_ENV or $_SERVER)
    ;      it must be associated with embraces to specify the name of the env
    ;      variable. Some examples:
    ;      - server specifics like: %{REQUEST_METHOD}e or %{SERVER_PROTOCOL}e
    ;      - HTTP headers like: %{HTTP_HOST}e or %{HTTP_USER_AGENT}e
    ;  %f: script filename
    ;  %l: content-length of the request (for POST request only)
    ;  %m: request method
    ;  %M: peak of memory allocated by PHP
    ;      it can accept the following format:
    ;      - %{bytes}M (default)
    ;      - %{kilobytes}M
    ;      - %{kilo}M
    ;      - %{megabytes}M
    ;      - %{mega}M
    ;  %n: pool name
    ;  %o: output header
    ;      it must be associated with embraces to specify the name of the header:
    ;      - %{Content-Type}o
    ;      - %{X-Powered-By}o
    ;      - %{Transfert-Encoding}o
    ;      - ....
    ;  %p: PID of the child that serviced the request
    ;  %P: PID of the parent of the child that serviced the request
    ;  %q: the query string
    ;  %Q: the '?' character if query string exists
    ;  %r: the request URI (without the query string, see %q and %Q)
    ;  %R: remote IP address
    ;  %s: status (response code)
    ;  %t: server time the request was received
    ;      it can accept a strftime(3) format:
    ;      %d/%b/%Y:%H:%M:%S %z (default)
    ;      The strftime(3) format must be encapsulated in a %{<strftime_format>}t tag
    ;      e.g. for a ISO8601 formatted timestring, use: %{%Y-%m-%dT%H:%M:%S%z}t
    ;  %T: time the log has been written (the request has finished)
    ;      it can accept a strftime(3) format:
    ;      %d/%b/%Y:%H:%M:%S %z (default)
    ;      The strftime(3) format must be encapsulated in a %{<strftime_format>}t tag
    ;      e.g. for a ISO8601 formatted timestring, use: %{%Y-%m-%dT%H:%M:%S%z}t
    ;  %u: remote user
    ;
    ; Default: "%R - %u %t \"%m %r\" %s"
    access.format = {{ default "%R - %u %t \"%m %r\" %s" .Values.pool.access.format | quote }}

    ; Set the following PHP pool directives from the Helm Chart helper.
    {{- include "php-fpm.pool.slowlog" . | nindent 4 }}
    {{- include "php-fpm.pool.request_slowlog_timeout" . | nindent 4 }}
    {{- include "php-fpm.pool.request_slowlog_trace_depth" . | nindent 4 }}
    {{- include "php-fpm.pool.request_terminate_timeout" . | nindent 4 }}
    {{- include "php-fpm.pool.request_terminate_timeout_track_finished" . | nindent 4 }}

    {{- include "php-fpm.pool.rlimit_files" . | nindent 4 }}
    {{- include "php-fpm.pool.rlimit_core" . | nindent 4 }}

    {{- include "php-fpm.pool.chroot" . | nindent 4 }}
    {{- include "php-fpm.pool.chdir" . | nindent 4 }}

    ; Redirect worker stdout and stderr into main error log. If not set, stdout and
    ; stderr will be redirected to /dev/null according to FastCGI specs.
    ; Note: on highloaded environment, this can cause some delay in the page
    ; process time (several ms).
    ; Default Value: no
    catch_workers_output = {{ default "no" .Values.pool.catch_workers_output }}

    ; Decorate worker output with prefix and suffix containing information about
    ; the child that writes to the log and if stdout or stderr is used as well as
    ; log level and time. This options is used only if catch_workers_output is yes.
    ; Settings to "no" will output data as written to the stdout or stderr.
    ; Default value: yes
    decorate_workers_output = {{ default "yes" .Values.pool.decorate_workers_output }}

    ; Clear environment in FPM workers
    ; Prevents arbitrary environment variables from reaching FPM worker processes
    ; by clearing the environment in workers before env vars specified in this
    ; pool configuration are added.
    ; Setting to "no" will make all environment variables available to PHP code
    ; via getenv(), $_ENV and $_SERVER.
    ; Default Value: yes
    clear_env = {{ default "yes" .Values.pool.clear_env }}

    ; Set the following PHP pool directives from the Helm Chart helper.
    {{- include "php-fpm.pool.env" . | nindent 4 }}

    {{- include "php-fpm.pool.php_value" . | nindent 4 }}
    {{- include "php-fpm.pool.php_flag" . | nindent 4 }}
    {{- include "php-fpm.pool.php_admin_value" . | nindent 4 }}
    {{- include "php-fpm.pool.php_admin_flag" . | nindent 4 }}